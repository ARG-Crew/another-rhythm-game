// Generated by Haxe 4.2.0
#include <hxcpp.h>

#ifndef INCLUDED_Settings
#include <Settings.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_d75dc7e3261abec7_5_boot,"Settings","boot",0xa0de6f7d,"Settings.boot","Settings.hx",5,0xc9b94d9b)

void Settings_obj::__construct() { }

Dynamic Settings_obj::__CreateEmpty() { return new Settings_obj; }

void *Settings_obj::_hx_vtable = 0;

Dynamic Settings_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Settings_obj > _hx_result = new Settings_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Settings_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x17621127;
}

::String Settings_obj::skin;


Settings_obj::Settings_obj()
{
}

bool Settings_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"skin") ) { outValue = ( skin ); return true; }
	}
	return false;
}

bool Settings_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"skin") ) { skin=ioValue.Cast< ::String >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Settings_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo Settings_obj_sStaticStorageInfo[] = {
	{::hx::fsString,(void *) &Settings_obj::skin,HX_("skin",7d,16,55,4c)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void Settings_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Settings_obj::skin,"skin");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Settings_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Settings_obj::skin,"skin");
};

#endif

::hx::Class Settings_obj::__mClass;

static ::String Settings_obj_sStaticFields[] = {
	HX_("skin",7d,16,55,4c),
	::String(null())
};

void Settings_obj::__register()
{
	Settings_obj _hx_dummy;
	Settings_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("Settings",03,39,ef,64);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Settings_obj::__GetStatic;
	__mClass->mSetStaticField = &Settings_obj::__SetStatic;
	__mClass->mMarkFunc = Settings_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Settings_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Settings_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Settings_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Settings_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Settings_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Settings_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_d75dc7e3261abec7_5_boot)
HXDLIN(   5)		skin = HX_("square",9d,00,f2,58);
            	}
}

