// Generated by Haxe 4.2.0
#ifndef INCLUDED_Palette
#define INCLUDED_Palette

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Palette)



class HXCPP_CLASS_ATTRIBUTES Palette_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Palette_obj OBJ_;
		Palette_obj();

	public:
		enum { _hx_ClassId = 0x16eb32b7 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Palette")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"Palette"); }

		inline static ::hx::ObjectPtr< Palette_obj > __new() {
			::hx::ObjectPtr< Palette_obj > __this = new Palette_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Palette_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Palette_obj *__this = (Palette_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Palette_obj), false, "Palette"));
			*(void **)__this = Palette_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Palette_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Palette",5b,ba,b4,39); }

		static void __boot();
		static int bg;
		static int released;
		static int pressed;
		static int confirmed;
		static void parse(::String file);
		static ::Dynamic parse_dyn();

};


#endif /* INCLUDED_Palette */ 
