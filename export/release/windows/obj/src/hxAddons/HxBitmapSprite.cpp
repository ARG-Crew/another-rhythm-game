// Generated by Haxe 4.2.0
#include <hxcpp.h>

#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_graphics_FlxGraphic
#include <flixel/graphics/FlxGraphic.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_hxAddons_HxBitmapSprite
#include <hxAddons/HxBitmapSprite.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_fa3a5ddc681d3c6f_11_new,"hxAddons.HxBitmapSprite","new",0x89154b01,"hxAddons.HxBitmapSprite.new","hxAddons/HxBitmapSprite.hx",11,0xc988be6e)
HX_LOCAL_STACK_FRAME(_hx_pos_fa3a5ddc681d3c6f_17_loadBitmap,"hxAddons.HxBitmapSprite","loadBitmap",0x2ab2ca34,"hxAddons.HxBitmapSprite.loadBitmap","hxAddons/HxBitmapSprite.hx",17,0xc988be6e)
namespace hxAddons{

void HxBitmapSprite_obj::__construct(::String bitmap,::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y){
            		Float x = __o_x.Default(0);
            		Float y = __o_y.Default(0);
            	HX_STACKFRAME(&_hx_pos_fa3a5ddc681d3c6f_11_new)
HXLINE(  12)		super::__construct(x,y,null());
HXLINE(  13)		if (::hx::IsNotNull( bitmap )) {
HXLINE(  13)			this->loadBitmap(bitmap);
            		}
            	}

Dynamic HxBitmapSprite_obj::__CreateEmpty() { return new HxBitmapSprite_obj; }

void *HxBitmapSprite_obj::_hx_vtable = 0;

Dynamic HxBitmapSprite_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< HxBitmapSprite_obj > _hx_result = new HxBitmapSprite_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2]);
	return _hx_result;
}

bool HxBitmapSprite_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2c01639b) {
		if (inClassId<=(int)0x2a66050f) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x2a66050f;
		} else {
			return inClassId==(int)0x2c01639b;
		}
	} else {
		return inClassId==(int)0x7ccf8994 || inClassId==(int)0x7dab0655;
	}
}

 ::hxAddons::HxBitmapSprite HxBitmapSprite_obj::loadBitmap(::String bitmap){
            	HX_STACKFRAME(&_hx_pos_fa3a5ddc681d3c6f_17_loadBitmap)
HXLINE(  18)		 ::openfl::display::BitmapData bitmapdata = ::openfl::display::BitmapData_obj::fromFile(bitmap);
HXLINE(  19)		 ::flixel::graphics::FlxGraphic graphic = ::flixel::graphics::FlxGraphic_obj::fromBitmapData(bitmapdata,false,null(),null());
HXLINE(  20)		 ::hxAddons::HxBitmapSprite sprite = ::hx::ObjectPtr<OBJ_>(this);
HXLINE(  21)		sprite->loadGraphic(graphic,null(),null(),null(),null(),null());
HXLINE(  22)		return sprite;
            	}


HX_DEFINE_DYNAMIC_FUNC1(HxBitmapSprite_obj,loadBitmap,return )


::hx::ObjectPtr< HxBitmapSprite_obj > HxBitmapSprite_obj::__new(::String bitmap,::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y) {
	::hx::ObjectPtr< HxBitmapSprite_obj > __this = new HxBitmapSprite_obj();
	__this->__construct(bitmap,__o_x,__o_y);
	return __this;
}

::hx::ObjectPtr< HxBitmapSprite_obj > HxBitmapSprite_obj::__alloc(::hx::Ctx *_hx_ctx,::String bitmap,::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y) {
	HxBitmapSprite_obj *__this = (HxBitmapSprite_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(HxBitmapSprite_obj), true, "hxAddons.HxBitmapSprite"));
	*(void **)__this = HxBitmapSprite_obj::_hx_vtable;
	__this->__construct(bitmap,__o_x,__o_y);
	return __this;
}

HxBitmapSprite_obj::HxBitmapSprite_obj()
{
}

::hx::Val HxBitmapSprite_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"loadBitmap") ) { return ::hx::Val( loadBitmap_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *HxBitmapSprite_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *HxBitmapSprite_obj_sStaticStorageInfo = 0;
#endif

static ::String HxBitmapSprite_obj_sMemberFields[] = {
	HX_("loadBitmap",b5,3e,37,a6),
	::String(null()) };

::hx::Class HxBitmapSprite_obj::__mClass;

void HxBitmapSprite_obj::__register()
{
	HxBitmapSprite_obj _hx_dummy;
	HxBitmapSprite_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("hxAddons.HxBitmapSprite",8f,b6,f9,35);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(HxBitmapSprite_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< HxBitmapSprite_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = HxBitmapSprite_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = HxBitmapSprite_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hxAddons
