// Generated by Haxe 4.2.0
#ifndef INCLUDED_hxAddons_HxBitmapSprite
#define INCLUDED_hxAddons_HxBitmapSprite

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(hxAddons,HxBitmapSprite)

namespace hxAddons{


class HXCPP_CLASS_ATTRIBUTES HxBitmapSprite_obj : public  ::flixel::FlxSprite_obj
{
	public:
		typedef  ::flixel::FlxSprite_obj super;
		typedef HxBitmapSprite_obj OBJ_;
		HxBitmapSprite_obj();

	public:
		enum { _hx_ClassId = 0x2a66050f };

		void __construct(::String bitmap,::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="hxAddons.HxBitmapSprite")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"hxAddons.HxBitmapSprite"); }
		static ::hx::ObjectPtr< HxBitmapSprite_obj > __new(::String bitmap,::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y);
		static ::hx::ObjectPtr< HxBitmapSprite_obj > __alloc(::hx::Ctx *_hx_ctx,::String bitmap,::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~HxBitmapSprite_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("HxBitmapSprite",a4,10,c2,09); }

		 ::hxAddons::HxBitmapSprite loadBitmap(::String bitmap);
		::Dynamic loadBitmap_dyn();

};

} // end namespace hxAddons

#endif /* INCLUDED_hxAddons_HxBitmapSprite */ 
